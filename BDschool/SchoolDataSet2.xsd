<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="SchoolDataSet2" targetNamespace="http://tempuri.org/SchoolDataSet2.xsd" xmlns:mstns="http://tempuri.org/SchoolDataSet2.xsd" xmlns="http://tempuri.org/SchoolDataSet2.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="SchoolConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="SchoolConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.BDschool.Properties.Settings.GlobalReference.Default.SchoolConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="LessonsTableAdapter" GeneratorDataComponentClassName="LessonsTableAdapter" Name="Lessons" UserDataComponentName="LessonsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="SchoolConnectionString (Settings)" DbObjectName="School.dbo.Lessons" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Lessons] WHERE (([IdL] = @Original_IdL) AND ([NameL] = @Original_NameL))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IdL" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IdL" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_NameL" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="NameL" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Lessons] ([IdL], [NameL]) VALUES (@IdL, @NameL);
SELECT IdL, NameL FROM Lessons WHERE (IdL = @IdL)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IdL" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IdL" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@NameL" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="NameL" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT IdL, NameL FROM dbo.Lessons</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Lessons] SET [IdL] = @IdL, [NameL] = @NameL WHERE (([IdL] = @Original_IdL) AND ([NameL] = @Original_NameL));
SELECT IdL, NameL FROM Lessons WHERE (IdL = @IdL)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IdL" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IdL" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@NameL" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="NameL" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IdL" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IdL" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_NameL" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="NameL" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="IdL" DataSetColumn="IdL" />
              <Mapping SourceColumn="NameL" DataSetColumn="NameL" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="SchoolDataSet2" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="SchoolDataSet2" msprop:Generator_UserDSName="SchoolDataSet2">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Lessons" msprop:Generator_TableClassName="LessonsDataTable" msprop:Generator_TableVarName="tableLessons" msprop:Generator_TablePropName="Lessons" msprop:Generator_RowDeletingName="LessonsRowDeleting" msprop:Generator_RowChangingName="LessonsRowChanging" msprop:Generator_RowEvHandlerName="LessonsRowChangeEventHandler" msprop:Generator_RowDeletedName="LessonsRowDeleted" msprop:Generator_UserTableName="Lessons" msprop:Generator_RowChangedName="LessonsRowChanged" msprop:Generator_RowEvArgName="LessonsRowChangeEvent" msprop:Generator_RowClassName="LessonsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="IdL" msprop:Generator_ColumnVarNameInTable="columnIdL" msprop:Generator_ColumnPropNameInRow="IdL" msprop:Generator_ColumnPropNameInTable="IdLColumn" msprop:Generator_UserColumnName="IdL" type="xs:int" />
              <xs:element name="NameL" msprop:Generator_ColumnVarNameInTable="columnNameL" msprop:Generator_ColumnPropNameInRow="NameL" msprop:Generator_ColumnPropNameInTable="NameLColumn" msprop:Generator_UserColumnName="NameL">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Lessons" />
      <xs:field xpath="mstns:IdL" />
    </xs:unique>
  </xs:element>
</xs:schema>